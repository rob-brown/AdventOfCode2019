fn calculate_fuel(masses: &Vec<f32>) -> Vec<f32> {
	masses.iter().map(|x| f32::trunc(*x / 3.0) - 2.0).filter(|x| *x > 0.0).collect()
}

pub fn solve() {
	let modules = vec! [108546.0, 76196.0, 144412.0, 100530.0, 143908.0, 79763.0, 109927.0, 53656.0, 82633.0, 103781.0, 97202.0, 81600.0, 115278.0, 90095.0, 85533.0, 58230.0, 142490.0, 65176.0, 132915.0, 82319.0, 148743.0, 91444.0, 145760.0, 78002.0, 127484.0, 67225.0, 74721.0, 145620.0, 146254.0, 135544.0, 74198.0, 88015.0, 53595.0, 142036.0, 113928.0, 65217.0, 56126.0, 110117.0, 57729.0, 99052.0, 89262.0, 141540.0, 70472.0, 145271.0, 81548.0, 68065.0, 93431.0, 125210.0, 66454.0, 67709.0, 149409.0, 101787.0, 130111.0, 60569.0, 131869.0, 149702.0, 135564.0, 135094.0, 71358.0, 100169.0, 127644.0, 147741.0, 102918.0, 93503.0, 74752.0, 135883.0, 120158.0, 94570.0, 129517.0, 85602.0, 55921.0, 76746.0, 107055.0, 79320.0, 81991.0, 58982.0, 63009.0, 91360.0, 147253.0, 51139.0, 61871.0, 107140.0, 146767.0, 77441.0, 125533.0, 70317.0, 125271.0, 73189.0, 141359.0, 144549.0, 104812.0, 91315.0, 145163.0, 147202.0, 95111.0, 82628.0, 116839.0, 132358.0, 99704.0, 85305.0];
	
	let fuel: f32 = calculate_fuel(&modules).iter().sum();
	
    // 3395944
	println!("Day 1:A = {}", fuel);
	
	let mut total_fuel: f32 = 0.0;
	let mut current = modules;
	
	while current.is_empty() == false {
		current = calculate_fuel(&current);
		total_fuel += current.iter().sum::<f32>();
	}
	
    // 5091036
	println!("Day 1:B = {}", total_fuel);
}
